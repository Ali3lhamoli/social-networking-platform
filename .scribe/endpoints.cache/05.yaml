## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Connection Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/connections
    metadata:
      groupName: 'Connection Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get all connections for a user

        This endpoint retrieves all connections (friend requests) for a specific user.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      user_id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": [
              {
                "id": 1,
                "user_id": 1,
                "friend_id": 2,
                "status": "pending",
                "created_at": "2024-11-23T10:00:00.000000Z",
                "updated_at": "2024-11-23T12:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "No data found"
          }
        headers: []
        description: 'no data found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/connections
    metadata:
      groupName: 'Connection Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Create a new connection

        This endpoint creates a new connection (friend request) between two users.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The ID of the user sending the friend request.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      friend_id:
        name: friend_id
        description: 'The ID of the user receiving the friend request.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 1
      friend_id: 2
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Connection created successfully",
            "data": {
              "id": 1,
              "user_id": 1,
              "friend_id": 2,
              "status": "pending",
              "created_at": "2024-11-23T10:00:00.000000Z",
              "updated_at": "2024-11-23T10:00:00.000000Z"
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": {
              "user_id": ["The user_id field is required."],
              "friend_id": ["The friend_id field is required."]
            }
          }
        headers: []
        description: 'validation failed'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/connections/{id}'
    metadata:
      groupName: 'Connection Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Show a specific connection

        This endpoint retrieves the details of a specific connection.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the connection.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      connection:
        name: connection
        description: 'The ID of the connection.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
      connection: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "data": {
              "id": 1,
              "user_id": 1,
              "friend_id": 2,
              "status": "pending",
              "created_at": "2024-11-23T10:00:00.000000Z",
              "updated_at": "2024-11-23T10:00:00.000000Z"
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Connection not found"
          }
        headers: []
        description: 'not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/connections/{id}'
    metadata:
      groupName: 'Connection Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Update the status of a connection

        This endpoint updates the status of a specific connection (e.g., accepting the friend request).
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the connection.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      connection:
        name: connection
        description: 'The ID of the connection.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
      connection: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      friend_id:
        name: friend_id
        description: 'The ID of the friend.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the connection.'
        required: true
        example: accepted
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 1
      friend_id: 2
      status: accepted
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Connection updated successfully",
            "data": {
              "id": 1,
              "user_id": 1,
              "friend_id": 2,
              "status": "accepted",
              "created_at": "2024-11-23T10:00:00.000000Z",
              "updated_at": "2024-11-23T12:00:00.000000Z"
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: |-
          {
            "status": "error",
            "message": {
              "status": ["The status field is required."]
            }
          }
        headers: []
        description: 'validation failed'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/connections/{id}'
    metadata:
      groupName: 'Connection Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Delete a specific connection

        This endpoint deletes a specific connection (friendship).
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the connection.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      connection:
        name: connection
        description: 'The ID of the connection.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
      connection: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Connection deleted successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
            "status": "error",
            "message": "Connection not found"
          }
        headers: []
        description: 'not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
