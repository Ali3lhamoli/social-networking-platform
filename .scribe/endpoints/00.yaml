name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        User registration

        This endpoint allows a user to register by providing their name, email, and password.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's full name."
        required: true
        example: 'Ali Alhamoli'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address."
        required: true
        example: ali@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Ali Alhamoli'
      email: ali@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "token": "some-jwt-token",
            "user": {
              "id": 1,
              "name": "Ali",
              "email": "ali@example.com"
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: |-
          {
            "error": {
              "name": ["The name field is required."],
              "email": ["The email field is required."],
              "password": ["The password field is required."]
            }
          }
        headers: []
        description: 'validation failed'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        User login

        This endpoint allows a user to log in by providing their email and password.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address."
        required: true
        example: ali@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: ali@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "token": "some-jwt-token",
            "user": {
              "id": 1,
              "name": "Ali",
              "email": "ali@example.com"
            }
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Invalid credentials"
          }
        headers: []
        description: 'invalid credentials'
        custom: []
      -
        status: 422
        content: |-
          {
            "error": {
              "email": ["The email field is required."],
              "password": ["The password field is required."]
            }
          }
        headers: []
        description: 'validation failed'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        User logout

        This endpoint allows a user to log out by deleting their current authentication token.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Logged out"
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Failed to logout"
          }
        headers: []
        description: 'failed to logout'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
